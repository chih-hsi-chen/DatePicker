{"version":3,"sources":["api/helper.js","components/DateHeader.jsx","components/CalendarDate.jsx","components/DateGrid.jsx","components/DatePicker.jsx","App.js","serviceWorker.js","index.js"],"names":["THIS_YEAR","Date","getFullYear","THIS_MONTH","getMonth","THIS_DATE","getDate","MONTHS","WEEKDAY","zeroPad","value","length","padStart","getPrevInfo","month","year","prevMonth","prevYear","getNextInfo","nextMonth","nextYear","getMonthDays","leapYear","isLeapYear","includes","getMonthFirstDay","getDay","initialCalendar","monthDays","monthFirstDay","DaysFromPrevMonth","DaysFromNextMonth","CALENDAR_WEEKS","prevMonthDays","prevMonthDates","Array","map","index","day","currentMonthDates","nextMonthDates","PickerContext","React","createContext","currentDate","today","pickedDate","handlePrev","console","log","this","constructor","name","hanldeNext","handlePick","Arrow","props","inlineClass","push","dir","Consumer","picker","className","join","onClick","handleClick","DateHeader","context","handleNext","month_name","Component","contextType","CalendarDate","DateType","bind","date_info","base","input","target","isHighlighted","isToday","inlineStyle","style","CalendarDay","dayLabel","DateGrid","state","dates","nextProps","nextContext","setState","prevState","weekdayList","key","allDays","date","DatePicker","newDate","contextValue","Provider","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48086dbb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CALENDAR_WEEKS = 6;\r\nexport const THIS_YEAR = (new Date().getFullYear());\r\n// one-based month\r\nexport const THIS_MONTH = (new Date().getMonth()) + 1;\r\nexport const THIS_DATE = new Date().getDate();\r\n\r\nexport const MONTHS = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n];\r\n\r\nexport const WEEKDAY = [\r\n    'Sun',\r\n    'Mon',\r\n    'Tue',\r\n    'Wed',\r\n    'Thu',\r\n    'Fri',\r\n    'Sat'\r\n];\r\n\r\nexport const zeroPad = (value, length) => {\r\n    return `${value}`.padStart(length, '0');\r\n};\r\n\r\nconst isLeapYear = (year) => {\r\n    if (year % 4 === 0) {\r\n        if (year % 100 === 0 && year % 400 !== 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const getPrevInfo = (month, year) => {\r\n    return month === 1\r\n        ? {prevMonth: 12, prevYear: year - 1}\r\n        : {prevMonth: month - 1, prevYear: year};\r\n};\r\nexport const getNextInfo = (month, year) => {\r\n    return month === 12\r\n        ? {nextMonth: 1, nextYear: year + 1}\r\n        : {nextMonth: month + 1, nextYear: year};\r\n};\r\n\r\nconst getMonthDays = (month, year) => {\r\n    var months30 = [4, 6, 9, 11];\r\n    var leapYear = isLeapYear(year);\r\n\r\n    return month === 2\r\n        ? leapYear ? 29 : 28\r\n        : months30.includes(month) ? 30 : 31;\r\n};\r\n\r\n// one-based weekday\r\n// 0->Sunday, 1->Monday ... etc\r\nconst getMonthFirstDay = (month, year) => {\r\n    return (new Date(`${year}-${zeroPad(month, 2)}-01`).getDay());\r\n};\r\n\r\nexport const initialCalendar = (month = THIS_MONTH, year = THIS_YEAR) => {\r\n    // Get number of days in current month and first weekday number in month\r\n    const monthDays = getMonthDays(month, year);\r\n    const monthFirstDay = getMonthFirstDay(month, year);\r\n\r\n    // Get number of days to be displayed from previous and next month\r\n    // This will ensure that total 42 days are displayed on calendar\r\n    const DaysFromPrevMonth = monthFirstDay === 0 ? 7 : monthFirstDay;\r\n    const DaysFromNextMonth = (CALENDAR_WEEKS * 7) - (monthDays + DaysFromPrevMonth);\r\n\r\n    // Get the previous and next month, year\r\n    const {prevMonth, prevYear} = getPrevInfo(month, year);\r\n    const {nextMonth, nextYear} = getNextInfo(month, year);\r\n\r\n    // Get number of days in previous month\r\n    const prevMonthDays = getMonthDays(prevMonth, prevYear);\r\n\r\n    // Build dates to be displayed on calendar from prev month\r\n    const prevMonthDates = [...new Array(DaysFromPrevMonth)].map((value, index) => {\r\n        const day = index + 1 + (prevMonthDays - DaysFromPrevMonth);\r\n        return {\r\n            year: prevYear,\r\n            month: prevMonth,\r\n            day: zeroPad(day, 2)\r\n        };\r\n    });\r\n\r\n    // Build dates to be displayed on calendar from current month\r\n    const currentMonthDates = [...new Array(monthDays)].map((value, index) => {\r\n        const day = index + 1;\r\n        return {\r\n            year: year,\r\n            month: month,\r\n            day: zeroPad(day, 2)\r\n        };\r\n    });\r\n\r\n    // Build dates to be displayed on calendar from next month\r\n    const nextMonthDates = [...new Array(DaysFromNextMonth)].map((value, index) => {\r\n        const day = index + 1;\r\n        return {\r\n            year: nextYear,\r\n            month: nextMonth,\r\n            day: zeroPad(day, 2)\r\n        };\r\n    });\r\n\r\n    return [...prevMonthDates, ...currentMonthDates, ...nextMonthDates];\r\n};\r\n\r\nexport const PickerContext = React.createContext({\r\n    currentDate: {\r\n        year: THIS_YEAR, \r\n        month: THIS_MONTH, \r\n        day: zeroPad(THIS_DATE, 2),\r\n    },\r\n    today: {\r\n        year: THIS_YEAR,\r\n        month: THIS_MONTH,\r\n        day: zeroPad(THIS_DATE, 2),\r\n    },\r\n    pickedDate: { // selected date\r\n        year: THIS_YEAR,\r\n        month: THIS_MONTH,\r\n        day: zeroPad(THIS_DATE, 2),\r\n    },\r\n    handlePrev: function() {\r\n        console.log(this.constructor.name);\r\n    },\r\n    hanldeNext: function() {\r\n        console.log(this.constructor.name);\r\n    },\r\n    handlePick: function() {\r\n        console.log(this.constructor.name);\r\n    }\r\n});","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {PickerContext, MONTHS} from 'api/helper.js';\r\n\r\nfunction Arrow(props) {\r\n\tlet inlineClass = ['arrow'];\r\n\r\n\tinlineClass.push(props.dir);\r\n\r\n\treturn (\r\n\t\t<PickerContext.Consumer>\r\n\t\t\t{picker => (\r\n\t\t\t\t<button className = {inlineClass.join(' ')}\r\n\t\t\t\t\t\tonClick = {props.handleClick}></button>\r\n\t\t\t)}\r\n\t\t</PickerContext.Consumer>\t\t\r\n\t);\r\n};\r\n\r\nexport default class DateHeader extends React.Component {\r\n\tstatic propTypes = {\r\n\r\n\t};\r\n\tstatic contextType = PickerContext;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {month, year} = this.context.currentDate;\r\n\t\tconst {handlePrev, handleNext} = this.context;\r\n\t\tconst month_name = MONTHS[month - 1];\r\n\r\n\t\treturn (\r\n\t\t\t<div className = \"calendar-header\">\r\n\t\t\t\t<Arrow dir = 'left' handleClick = {handlePrev}/>\r\n\t\t\t\t<div className = \"calendar-month\">\r\n\t\t\t\t\t{month_name} {year}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Arrow dir = 'right' handleClick = {handleNext}/>\r\n\t\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {PickerContext, zeroPad} from 'api/helper.js';\r\n\r\nfunction inMouth(target, input) {\r\n\treturn target.year === input.year &&\r\n    \t   target.month === input.month;\r\n}\r\n\r\nfunction isToday(today, input) {\r\n\treturn today.year === input.year &&\r\n    \t   today.month === input.month &&\r\n    \t   today.day === input.day;\r\n}\r\n\r\nfunction isHighlighted(base = new Date(), input) {\r\n    const target = {\r\n    \tyear: base.getFullYear(),\r\n    \tmonth: base.getMonth() + 1,\r\n    \tday: zeroPad(base.getDate(), 2)\r\n    };\r\n\r\n    return target.year === input.year &&\r\n    \t   target.month === input.month &&\r\n    \t   target.day === input.day;\r\n}\r\n\r\nexport default class CalendarDate extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tindex: PropTypes.number,\r\n\t\tdate_info: PropTypes.object,\r\n\t\t// handlePick: PropTypes.func,\r\n\t};\r\n\tstatic contextType = PickerContext;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.DateType = this.DateType.bind(this);\r\n\t}\r\n\r\n\tDateType() {\r\n\t\tconst {pickedDate, today} = this.context;\r\n\t\tconst {date_info} = this.props;\r\n\t\tvar base = new Date(`${pickedDate.year}-${zeroPad(pickedDate.month, 2)}-${zeroPad(pickedDate.day, 2)}`);\r\n\r\n\t\treturn isHighlighted(base, date_info)\r\n\t\t\t\t? 'highlighted'\r\n\t\t\t\t: isToday(today, date_info) ? 'today' : '';\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {currentDate, handlePick} = this.context;\r\n\t\tconst {date_info, index} = this.props;\r\n\r\n\t\tlet inlineClass = ['calendar-cell', 'calendar-date'];\r\n\t\tlet inlineStyle = {\r\n\t\t\t'--color': inMouth(currentDate, date_info) ? '#333333' : '#dddddd',\r\n            'borderBottom': (index + 1) / 7 <= 5 ? '2px solid #dddddd' : 'none',\r\n            'borderRight': (index % 7) === 6 ? 'none' : '2px solid #dddddd',\r\n\t\t};\r\n\r\n\t\tinlineClass.push(this.DateType());\r\n\r\n\t\treturn (\r\n\t\t\t<div style = {inlineStyle}\r\n\t\t\t\t className = {inlineClass.join(' ')}\r\n\t\t\t\t onClick = {() => {\r\n\t\t\t\t \thandlePick(date_info);\r\n\t\t\t\t }}>\r\n\t\t\t\t{date_info.day}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CalendarDate from 'components/CalendarDate.jsx';\r\nimport {PickerContext,\r\n\t\tinitialCalendar,\r\n\t\tWEEKDAY} from 'api/helper.js';\r\n\r\n// props: index, dayLabel\r\nfunction CalendarDay(props) {\r\n\tlet inlineStyle = {\r\n\t\t'borderRight': (props.index % 7) === 6 ? 'none' : '2px solid #0066cc',\r\n\t};\r\n\treturn (\r\n\t\t<div style = {inlineStyle} className = \"calendar-cell calendar-day\">\r\n\t\t\t{props.dayLabel}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default class DateGrid extends React.Component {\r\n\tstatic propTypes = {\r\n\r\n\t};\r\n\tstatic contextType = PickerContext;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdates: initialCalendar(),\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps, nextContext) {\r\n\t\tconst {month, year} = nextContext.currentDate;\r\n\r\n\t\tthis.setState((prevState, props) => ({\r\n\t\t\tdates: initialCalendar(month, year),\r\n\t\t}));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {currentDate, today, pickedDate} = this.context; \r\n\t\tconst {dates} = this.state;\r\n\r\n\t\tlet weekdayList = WEEKDAY.map((dayLabel, index) => (\r\n\t\t\t\t<CalendarDay key = {index}\r\n\t\t\t\t\t\t\t index = {index}\r\n\t\t\t\t\t\t\t dayLabel = {dayLabel} />\r\n\t\t\t));\r\n\t\tlet allDays = dates.map((date, index) => (\r\n\t\t\t\t<CalendarDate key = {index}\r\n\t\t\t\t\t\t\t  index = {index}\r\n\t\t\t\t\t\t\t  date_info = {date}\r\n\t\t\t\t\t\t\t  currentDate = {currentDate}\r\n\t\t\t\t\t\t\t  today = {today}\r\n\t\t\t\t\t\t\t  pickedDate = {pickedDate} />\r\n\t\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className = \"calendar-grid\">\r\n\t\t\t\t{weekdayList}\r\n\t\t\t\t{allDays}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DateHeader from 'components/DateHeader.jsx';\r\nimport DateGrid from 'components/DateGrid.jsx';\r\n\r\nimport {PickerContext,\r\n\t\tgetPrevInfo,\r\n\t\tgetNextInfo,\r\n\t\tzeroPad,\r\n\t\tTHIS_YEAR,\r\n\t\tTHIS_MONTH,\r\n\t\tTHIS_DATE} from 'api/helper.js';\r\nimport 'decorations/styles.css';\r\n\r\nexport default class DatePicker extends React.Component {\r\n\tstatic propTypes = {\r\n\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrentDate: {\r\n\t\t\t\tyear: THIS_YEAR, \r\n\t\t\t\tmonth: THIS_MONTH, \r\n\t\t\t\tday: zeroPad(THIS_DATE, 2),\r\n\t\t\t},\r\n\t\t\ttoday: {\r\n\t\t\t\tyear: THIS_YEAR,\r\n                month: THIS_MONTH,\r\n                day: zeroPad(THIS_DATE, 2),\r\n\t\t\t},\r\n\t\t\tpickedDate: { // selected date\r\n                year: THIS_YEAR,\r\n                month: THIS_MONTH,\r\n                day: zeroPad(THIS_DATE, 2),\r\n            },\r\n\t\t\t\t\t\t\r\n\t\t};\r\n\t\tthis.handlePrev = this.handlePrev.bind(this);\r\n\t\tthis.handleNext = this.handleNext.bind(this);\r\n\t\tthis.handlePick = this.handlePick.bind(this);\r\n\t}\r\n\r\n\thandlePrev() {\r\n\t\tconst {currentDate} = this.state;\r\n\t\tconst {prevMonth, prevYear} = getPrevInfo(currentDate.month, currentDate.year);\r\n\r\n        this.setState((prevState, props) => ({\r\n        \tcurrentDate: {\r\n        \t\t...prevState.currentDate,\r\n        \t\tyear: prevYear,\r\n        \t\tmonth: prevMonth,\r\n        \t},\r\n        }));\r\n\t}\r\n\r\n\thandleNext() {\r\n\t\tconst {currentDate} = this.state;\r\n\t\tconst {nextMonth, nextYear} = getNextInfo(currentDate.month, currentDate.year);\r\n\r\n        this.setState((prevState, props) => ({\r\n        \tcurrentDate: {\r\n        \t\t...prevState.currentDate,\r\n        \t\tyear: nextYear,\r\n        \t\tmonth: nextMonth,\r\n        \t}\r\n        }));\r\n\t}\r\n\r\n\thandlePick(newDate) {\r\n        this.setState((prevState, props) => ({\r\n        \tcurrentDate: {\r\n        \t\t...prevState.currentDate,\r\n        \t\tyear: newDate.year,\r\n        \t\tmonth: newDate.month,\r\n        \t},\r\n        \tpickedDate: {\r\n        \t\t...newDate\r\n        \t}\r\n        }));\r\n    }\r\n\r\n\r\n\trender() {\r\n\t\tconst {currentDate, today, pickedDate} = this.state;\r\n\t\tconst self = this;\r\n\t\tconst contextValue = {\r\n\t\t\tcurrentDate,\r\n\t\t\ttoday,\r\n\t\t\tpickedDate,\r\n\t\t\thandlePrev: self.handlePrev,\r\n\t\t\thandleNext: self.handleNext,\r\n\t\t\thandlePick: self.handlePick,\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<PickerContext.Provider value = {contextValue}>\r\n\t\t\t\t<div className = \"calendar\">\r\n\t\t\t\t\t<DateHeader />\r\n\t\t\t\t\t<DateGrid />\r\n\t\t\t\t</div>\r\n\t\t\t</PickerContext.Provider>\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport DatePicker from 'components/DatePicker.jsx';\n\nexport default class App extends React.Component {\n  static propTypes = {\n\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <DatePicker />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}